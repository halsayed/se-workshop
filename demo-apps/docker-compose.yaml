
services:
  nginx:
    image: nginx
    restart: always
    ports:
      - "8080:80"
    volumes:
      - ${PWD}/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ${PWD}/nginx/certs:/etc/ssl/nginx
      - ${PWD}/nginx/logs:/var/log/nginx
      - ${PWD}/nginx/www:/data/www
  
  flight:
    build: ./flight_info
    environment:
      API_KEY: ${API_KEY}
      API_ENDPOINT: ${API_ENDPOINT}
      MODEL_NAME: ${MODEL_NAME}

  ocr:
    build: ./ocr
    environment:
      API_KEY: ${API_KEY}
      API_ENDPOINT: ${API_ENDPOINT}
      MODEL_NAME: vision

  chat:
    build: ./chatbot
    environment:
      API_KEY: ${API_KEY}
      API_ENDPOINT: ${API_ENDPOINT}
      MODEL_NAME: ${MODEL_NAME}

  translator:
    build: ./translator
    environment:
      API_KEY: ${API_KEY}
      API_ENDPOINT: ${API_ENDPOINT}
      MODEL_NAME: ${MODEL_NAME}
  
  recruiter-assistant:
    build: ./recruiter-assistant
    environment:
      API_KEY: ${API_KEY}
      API_ENDPOINT: ${API_ENDPOINT}
      MODEL_NAME: ${MODEL_NAME}

  pgvector:
    image: pgvector/pgvector:pg17
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASS}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pgvector-volume:/var/lib/postgresql/data
      - ./pgvector/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_USER}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASS}
    ports:
      - "8090:80"
    volumes:
      - pgadmin-volume:/var/lib/pgadmin

  n8n:
    image: n8nio/n8n
    environment:
      - N8N_SECURE_COOKIE=false
    ports:
      - "5678:5678"
    volumes:
      - n8n-volume:/home/node/.n8n

  anythingllm:
    image: mintplexlabs/anythingllm
    container_name: anythingllm
    ports:
    - "3001:3001"
    cap_add:
      - SYS_ADMIN
    environment:
      - STORAGE_DIR=/app/server/storage
      - JWT_SECRET="sadasdasdas"
    volumes:
      - anythingllm-volume:/app/server/storage
    restart: always

  minio:
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    container_name: minio
    environment:
        MINIO_ACCESS_KEY: ${MINIO_ROOT_USER:-minioadmin}
        MINIO_SECRET_KEY: ${MINIO_ROOT_PASSWORD:-minioadmin}
    ports:
        - '${MINIO_PORT:-9000}:9000'
        - '${MINIO_CONSOLE_PORT:-9001}:9001'
    volumes:
        - ./minio:/minio_data
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
        interval: 30s
        timeout: 20s
        retries: 3
    restart: always

  healthcare:
    build: ./healthcare
    environment:
      - API_KEY=${API_KEY}


volumes:
  pgvector-volume:
  pgadmin-volume:
  n8n-volume:
  anythingllm-volume:


